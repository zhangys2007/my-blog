(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{755:function(n,i,e){"use strict";e.r(i);var t=e(5),o=Object(t.a)({},(function(){var n=this,i=n.$createElement,e=n._self._c||i;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"引子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引子"}},[n._v("#")]),n._v(" 引子")]),n._v(" "),e("p",[n._v("iOS 目前已允许使用第三方输入法，但在实际开发中，无论是出于安全的考虑，还是对某个输入控件限制输入法，都有禁用第三方输入法的需求。基于此，对禁用第三方输入法的方式做一个总结。")]),n._v(" "),e("h2",{attrs:{id:"_1-全局禁用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-全局禁用"}},[n._v("#")]),n._v(" 1. 全局禁用")]),n._v(" "),e("p",[n._v("Objective-C 语言版本：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('- (BOOL)application:(UIApplication *)application\nshouldAllowExtensionPointIdentifier:(UIApplicationExtensionPointIdentifier)extensionPointIdentifier\n{\n    // 禁用三方输入法\n    // UIApplicationKeyboardExtensionPointIdentifier 等价于 @"com.apple.keyboard-service"\n    if ([extensionPointIdentifier isEqualToString:UIApplicationKeyboardExtensionPointIdentifier]) {\n        return NO;\n    }\n    return YES;\n}\n')])])]),e("p",[n._v("Swift 语言版本：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("func application(\n_ application: UIApplication,\nshouldAllowExtensionPointIdentifier extensionPointIdentifier: UIApplication.ExtensionPointIdentifier\n) -> Bool {\n    // 禁用三方输入法\n    if extensionPointIdentifier == .keyboard {\n    return false\n    }\n    return true\n}\n")])])]),e("h2",{attrs:{id:"_2-针对某个视图禁用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-针对某个视图禁用"}},[n._v("#")]),n._v(" 2. 针对某个视图禁用")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("func application(\n_ application: UIApplication, \nshouldAllowExtensionPointIdentifier extensionPointIdentifier: UIApplication.ExtensionPointIdentifier) -> Bool {\n    // 遍历当前根控制器的所有子控制器，找到需要的子控制器\n    for vc in self.window?.rootViewController?.childViewControllers ?? []\n    where vc.isKind(of: BaseNavigationController.self){\n        // 如果首页禁止使用第三方输入法\n        for vc1 in vc.childViewControllers where vc1.isKind(of: HomeViewController.self) {\n        return false\n        }\n    }\n    return true\n}\n")])])]),e("h2",{attrs:{id:"_3-针对某个-inputview-禁用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-针对某个-inputview-禁用"}},[n._v("#")]),n._v(" 3. 针对某个 inputView 禁用")]),n._v(" "),e("h3",{attrs:{id:"_3-1-自定义键盘"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-自定义键盘"}},[n._v("#")]),n._v(" 3.1 自定义键盘")]),n._v(" "),e("p",[n._v("如果需求只是针对数字的输入，优先使用自定义键盘，将 inputView 绑定自定义键盘，不会出现第三方输入法。")]),n._v(" "),e("h3",{attrs:{id:"_3-2-遍历视图内控件-找到需要设置的-inputview-专门设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-遍历视图内控件-找到需要设置的-inputview-专门设置"}},[n._v("#")]),n._v(" 3.2 遍历视图内控件，找到需要设置的 inputView，专门设置")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("func application(_ application: UIApplication, shouldAllowExtensionPointIdentifier extensionPointIdentifier: UIApplication.ExtensionPointIdentifier) -> Bool {\n    // 遍历当前根控制器的所有子控制器，找到需要的子控制器\n    for vc in self.window?.rootViewController?.childViewControllers ?? []\n    where vc.isKind(of: BaseNavigationController.self){\n        // 如果想要禁用的 inputView 在首页上\n        for vc1 in vc.childViewControllers where vc1.isKind(of: HomeViewController.self) {\n            // 如果 inputView.tag == 6 的 inputView 禁止使用第三方输入法\n            for view in vc1.view.subviews where view.tag == 6 {\n            return false\n            }\n        }\n    }\n    return true\n}\n")])])]),e("h1",{attrs:{id:"end"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#end"}},[n._v("#")]),n._v(" END")])])}),[],!1,null,null,null);i.default=o.exports}}]);