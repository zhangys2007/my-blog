(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{726:function(t,e,s){t.exports=s.p+"assets/img/20231213-1.e6aa8106.png"},727:function(t,e,s){t.exports=s.p+"assets/img/20231213-2.4b2f5e3c.png"},752:function(t,e,s){"use strict";s.r(e);var n=s(5),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"背景介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#背景介绍"}},[t._v("#")]),t._v(" 背景介绍")]),t._v(" "),n("p",[t._v("Xcode 15 安装包的大小相比之前更小，因为除了 macOS 的 Components，其他都需要动态下载安装，否则提示xXX Not Installed。同时增加了visionOS的 Components。")]),t._v(" "),n("img",{attrs:{src:s(726),width:"100%"}}),t._v("\nXcode15内置平台.png\n"),n("img",{attrs:{src:s(727),width:"100%"}}),t._v("\n未安装提示.png\n"),n("p",[t._v("由于模拟器安装包过大且不支持断点续传，在经历了在线安装 N 次失败后，决定采用离线的方式安装，最后成功。\n安装步骤—以iOS模拟器为例")]),t._v(" "),n("ol",[n("li",[t._v("根据官网指导下载 iOS_17_Simulator_Runtime.dmg。")]),t._v(" "),n("li",[t._v("双击 iOS_17_Simulator_Runtime.dmg 文件，等待打开后，逐层找到 Runtimes 文件夹。")]),t._v(" "),n("li",[t._v("选择 Xcode 15 App，然后右击选择 Show Package Content，通过 Contents —> Developer —> Platforms —> iPhoneOS.platform —> Library —> Developer —> CoreSimulator，找到 Profiles 文件夹。")]),t._v(" "),n("li",[t._v("将第 2 步的 Runtimes 文件夹拷贝到第 3 步的 Profiles 文件夹中。")]),t._v(" "),n("li",[t._v("打开/重启 Xcode 15，此时模拟器已成功安装。")])]),t._v(" "),n("h3",{attrs:{id:"注意-笔者在第-1-步下载时仍然失败-但控制台给出了下载的地址-后转到-safari-浏览器下载并断点续传了-2-次才成功下载了-dmg-文件。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注意-笔者在第-1-步下载时仍然失败-但控制台给出了下载的地址-后转到-safari-浏览器下载并断点续传了-2-次才成功下载了-dmg-文件。"}},[t._v("#")]),t._v(" 注意：笔者在第 1 步下载时仍然失败，但控制台给出了下载的地址，后转到 Safari 浏览器下载并断点续传了 2 次才成功下载了 dmg 文件。")])])}),[],!1,null,null,null);e.default=a.exports}}]);