(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{725:function(a,e,t){a.exports=t.p+"assets/img/20210308.6d5b9915.png"},749:function(a,e,t){"use strict";t.r(e);var i=t(5),r=Object(i.a)({},(function(){var a=this,e=a.$createElement,i=a._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[i("p",[a._v("几乎所有应用中都会出现各种各样的输入框，比如登陆时候需要输入账号、密码，列表中常出现的搜索框，我们购物时候填写的收货地址等等，这些需求的共同点都是首先在输入框中输入信息，然后对信息进行验证提交，但是不要忘记了输入、提交过程中还有一个步骤：对键盘的操作。\n对键盘的调起、隐藏大概在我们学习iOS开发初期就会接触到，常用的方法有几种：")]),a._v(" "),i("ul",[i("li",[a._v("1.对当前控制器的View添加一个tap手势，当点击的屏幕的时候判断页面中的输入控件是firstResponder时，就对它使用 resignFirstResponder。")]),a._v(" "),i("li",[a._v("2.当键盘弹起时候点击键盘右下角的完成按钮。")]),a._v(" "),i("li",[a._v("3.当界面有UITableView，滑动tableView时候进行隐藏。")])]),a._v(" "),i("p",[a._v("好啦 通过这几种方法我们可以完美的实现需求，在需要的时候调起键盘，输入完成时能通过点击、滑动等操作隐藏键盘。但是当添加一个新页面时，我们就需要把上边的逻辑重新写一遍，实在有够麻烦，好在我们有IQKeyboardManager, IQKeyboardManager是一个iOS keyboard 管理工具，它的一个功能是只需要两行代码就可以实现项目中所有页面的点击屏幕隐藏键盘操作，如果你愿意的话，导入包后不需要添加一行代码也可以实现，当然它的功能不仅仅这些，接下来我会介绍一下我们常用的一些功能。文章的最后我会写一下对IQKeyboardManager源码的分析，尽量做到知其然知其所以然。")]),a._v(" "),i("h2",{attrs:{id:"点击屏幕隐藏键盘"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#点击屏幕隐藏键盘"}},[a._v("#")]),a._v(" 点击屏幕隐藏键盘")]),a._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[a._v("IQKeyboardManager *keyboardManager = [IQKeyboardManager sharedManager];\nkeyboardManager.shouldResignOnTouchOutside = YES;\n")])])]),i("p",[a._v("现在你已经可以在所有页面中点击屏幕隐藏键盘，等等，前边不是说可以一行代码都不需要添加吗，很简单，点开IQKeyboardManager.m文件，在+ ()load方法中添加 keyboardManager.shouldResignOnTouchOutside = YES;\n修改后的方法：")]),a._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[a._v("+(void)load{    //Enabling IQKeyboardManager.\n    [[IQKeyboardManagersharedManager] setEnable:YES];\n    [IQKeyboardManagersharedManager].shouldResignOnTouchOutside = YES;\n}\n")])])]),i("p",[a._v("原理很简单，在你引用IQKeyboardManager头文件时，+()load方法会自动执行，原代码在这个方法里进行初始化工作，我们只需要添加上点击屏幕操作就可以了。")]),a._v(" "),i("h2",{attrs:{id:"键盘覆盖输入框时候页面自动上移"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#键盘覆盖输入框时候页面自动上移"}},[a._v("#")]),a._v(" 键盘覆盖输入框时候页面自动上移")]),a._v(" "),i("p",[a._v("这个功能现在你已经实现了。。。IQKeyboardManager同时支持手写代码和StoryBoard，当你的输入框被键盘覆盖后页面会自动上移。上移的距离由属性 keyboardDistanceFromTextField来控制。")]),a._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[a._v("keyboardManager.keyboardDistanceFromTextField = 100;\n")])])]),i("p",[a._v("值得注意的是当你使用StoryBoard构建页面，如果将输入控件的top约束指向了Top Layout Guide时候该功能是无效的，StoryBoard中Top Layout Guide作为ViewController的一个属性，它表示了一个不希望被状态栏和导航栏覆盖的最高位置。当只存在Status Bar时候该位置在Status Bar的下边，当存在Navigation Bar时候该位置在Navigation Bar的下边。所以当控件的top约束指向它的时候控件位置是无法移动的。解决办法：top约束指向 Superview.Top 操作步骤：Editer -> pin -> View\n参考：\n"),i("img",{attrs:{src:t(725),width:"40%"}})]),a._v(" "),i("h2",{attrs:{id:"为键盘添加工具栏"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#为键盘添加工具栏"}},[a._v("#")]),a._v(" 为键盘添加工具栏")]),a._v(" "),i("p",[a._v("IQKeyboardManager 会自动为键盘添加一个工具栏，它包含一个左箭头一个右箭头切换输入框，还有一个done按钮来关闭键盘。\n可以通过属性 enableAutoToolbar 开启/关闭")]),a._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[a._v("//关闭toolbar\nkeyboardManager.enableAutoToolbar = NO;\n")])])]),i("h2",{attrs:{id:"navigation-bar显示"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#navigation-bar显示"}},[a._v("#")]),a._v(" Navigation Bar显示")]),a._v(" "),i("p",[a._v("If you wang to always show UINavigationBar, then change the UIView Class To UIScrollView.")]),a._v(" "),i("p",[a._v("如果页面中带有 UINavigationBar，上移页面会将UINavigationBar一起移出屏幕外，框架作者提供了一个方法是UIScrollView替代控制器的View，但这样在少数情况下会出现控件错乱等副作用，所以使用这个方法时候要慎重")]),a._v(" "),i("h1",{attrs:{id:"源码分析"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#源码分析"}},[a._v("#")]),a._v(" 源码分析")]),a._v(" "),i("ul",[i("li",[i("p",[a._v("1.监听通知\n在IQKeyboardManager 初始化时候通过监听 keyboard、UItextField、UITextViewField通知来完成对界面的控制")])]),a._v(" "),i("li",[i("p",[a._v("2添加手势\nIQKeyboardManager在初始化时候创建了一个tap手势,当我们点击了textField时通过监听 UITextFieldTextDidBeginEditingNotification通知调用action\n-(void)textFieldViewDidBeginEditing:(NSNotification*)notification；在这方法里将tap手势添加到当前UITextField.window中，在tap手势的action方法中调用了完成对键盘的隐藏操作")])]),a._v(" "),i("li",[i("p",[a._v("3.位移被覆盖的界面\n在监听到UIKeyboardWillShowNotification、UITextFieldTextDidBeginEditingNotification时候从UITextField.window.rootViewController中找到栈中最顶层的viewController，然后计算当前输入框和keyboard的距离,现在就可以通过修改viewController.view的top来完成对页面的上移，同样，当收到UIKeyboardWillHideNotification、UITextFieldTextDidEndEditingNotification通知时候将上移之后的view还原到原来的位置。")])])]),a._v(" "),i("h1",{attrs:{id:"end"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#end"}},[a._v("#")]),a._v(" END")])])}),[],!1,null,null,null);e.default=r.exports}}]);